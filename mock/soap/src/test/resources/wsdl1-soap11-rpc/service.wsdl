<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2024.
  ~
  ~ This file is part of Imposter.
  ~
  ~ "Commons Clause" License Condition v1.0
  ~
  ~ The Software is provided to you by the Licensor under the License, as
  ~ defined below, subject to the following condition.
  ~
  ~ Without limiting other conditions in the License, the grant of rights
  ~ under the License will not include, and the License does not grant to
  ~ you, the right to Sell the Software.
  ~
  ~ For purposes of the foregoing, "Sell" means practicing any or all of
  ~ the rights granted to you under the License to provide to third parties,
  ~ for a fee or other consideration (including without limitation fees for
  ~ hosting or consulting/support services related to the Software), a
  ~ product or service whose value derives, entirely or substantially, from
  ~ the functionality of the Software. Any license notice or attribution
  ~ required by the License must also include this Commons Clause License
  ~ Condition notice.
  ~
  ~ Software: Imposter
  ~
  ~ License: GNU Lesser General Public License version 3
  ~
  ~ Licensor: Peter Cornish
  ~
  ~ Imposter is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Imposter is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with Imposter.  If not, see <https://www.gnu.org/licenses/>.
  -->

<definitions name="PetService" xmlns="http://schemas.xmlsoap.org/wsdl/"
             xmlns:tns="urn:com:example:petstore"
             xmlns:http="http://schemas.xmlsoap.org/wsdl/http/"
             xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
             xmlns:xs="http://www.w3.org/2001/XMLSchema"
             targetNamespace="urn:com:example:petstore">

    <documentation>
        This is a sample WSDL 1.1 document describing the pet service.
        It has SOAP 1.1 bindings, modified to use RPC style.
    </documentation>

    <!-- Abstract type -->
    <types>
        <xs:schema targetNamespace="urn:com:example:petstore">
            <xs:complexType name="petType">
                <xs:sequence>
                    <xs:element name="id" type="xs:int"/>
                    <xs:element name="name" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
    </types>

    <!-- Message Definitions -->
    <message name="getPetByIdRequest">
        <part name="id" type="xs:int"/>
    </message>
    <message name="getPetByIdResponse">
        <part name="result" type="tns:petType"/>
    </message>
    <message name="getPetByNameRequest">
        <part name="name" type="xs:string"/>
    </message>
    <message name="getPetByNameResponse">
        <part name="result" type="tns:petType"/>
    </message>

    <!-- Port Type Definition -->
    <portType name="PetPortType">
        <operation name="getPetById">
            <input message="tns:getPetByIdRequest"/>
            <output message="tns:getPetByIdResponse"/>
        </operation>
        <operation name="getPetByName">
            <input message="tns:getPetByNameRequest"/>
            <output message="tns:getPetByNameResponse"/>
        </operation>
    </portType>

    <!-- Binding Definition -->
    <binding name="PetServiceSoapBinding" type="tns:PetPortType">
        <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="getPetById">
            <soap:operation soapAction="getPetById" style="rpc"/>
            <input>
                <soap:body use="literal" namespace="urn:com:example:petstore"/>
            </input>
            <output>
                <soap:body use="literal" namespace="urn:com:example:petstore"/>
            </output>
        </operation>
        <operation name="getPetByName">
            <soap:operation soapAction="getPetByName" style="rpc"/>
            <input>
                <soap:body use="literal" namespace="urn:com:example:petstore"/>
            </input>
            <output>
                <soap:body use="literal" namespace="urn:com:example:petstore"/>
            </output>
        </operation>
    </binding>

    <!-- Service Definition -->
    <service name="PetService">
        <port name="PetServiceSoapPort" binding="tns:PetServiceSoapBinding">
            <soap:address location="http://www.example.com/soap/"/>
        </port>
    </service>
</definitions>
